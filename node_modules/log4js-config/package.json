{
  "name": "log4js-config",
  "version": "0.1.1",
  "description": "A simple common configuration library for log4js",
  "main": "lib/logger.js",
  "dependencies": {
    "log4js": "~0.6.2",
    "underscore": ">= 1.4.4"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "nodeunit": "= 0.7.4"
  },
  "scripts": {
    "test": "grunt test"
  },
  "repository": "",
  "author": {
    "name": "Oscar Renalias"
  },
  "license": "Apache",
  "readme": "log4js-common-config\n====================\nThis module aims to standardize application logging configuration in Node.js with log4js (https://github.com/nomiddlename/log4js-node)\nby providing a standard (configurable) naming convention and location for external log4js configuration files.\n\nThe advantage is that one single configuration file would be used to customize and control log4js, rather than different modules\nproviding their own log4js settings, configuration and files.\n\nHow to use\n----------\nAdd the following dependency to your ```package.json```, and then run ```npm update```:\n\n```\n\"dependencies\": {\n    ...\n    \"log4js-config\": \">= 0.1.0\",\n    ...\n}\n```\n\nThe log4js-common-config dependency will automatically pull log4js for you so no further dependencies are\nexplicitly needed.\n\nLogging\n-------\nAdd the following module import statement at the top of the entry point of your application:\n\n```\nvar logger = require(\"log4js-config\");\n```\n\nThis will automatically configure logging in your application using a file called ```app-logging.json```, which should\nfollow log4j's logging configuration file structure: https://github.com/nomiddlename/log4js-node#configuration. This\nfile can either be placed in the root folder of your application, or in a folder called ```config```.\n\nIn order to retrieve a logger, use the ```get``` method followed by a log category name:\n\n```\nvar log = loger.get(\"some.log.category.name\");\nlog.debug(\"debug message\");\nlog.info(\"info message\");\n```\n\nLog4js will be automatically configured according to the contents of your ```app-logging.json``` configuration file.\n\nUsing non-standard configuration\n--------------------------------\nIf for some reason the default configuration is not sufficient, it is possible to provide the module with a function\nthat will return the correct name and location of the log4js configuration file using the module's ```init```\nmethod:\n\n```\nvar logger = require(\"log4js-config\").init(function() {\n    return(\"./settings/logging-config.json\");\n});\n```\n\nIt is only necessary to do this once, preferably near or at the very top of the entry point to your application. Subsequent\ncalls to ```require(\"log4js-config\")``` will use the non-standard configuration automatically.\n\nTesting\n-------\nBasic unit testing is provided via Grunt and nodeunit:\n\n```\ngrunt test\n```",
  "readmeFilename": "README.md",
  "_id": "log4js-config@0.1.1",
  "dist": {
    "shasum": "7a55008d6f500e7a82b2cc8e6317154e89c62640",
    "tarball": "http://registry.npmjs.org/log4js-config/-/log4js-config-0.1.1.tgz"
  },
  "_from": "log4js-config@",
  "_npmVersion": "1.2.14",
  "_npmUser": {
    "name": "oscarrenalias",
    "email": "oscar@renalias.net"
  },
  "maintainers": [
    {
      "name": "oscarrenalias",
      "email": "oscar@renalias.net"
    }
  ],
  "directories": {},
  "_shasum": "7a55008d6f500e7a82b2cc8e6317154e89c62640",
  "_resolved": "https://registry.npmjs.org/log4js-config/-/log4js-config-0.1.1.tgz"
}
